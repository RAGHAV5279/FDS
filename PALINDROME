/*A palindrome is a string of character that‘s the same forward and backward. Typically, 
punctuation, capitalization, and spaces are ignored. For example, “Poor Dan is in a 
droop” is a palindrome, as can be seen by examining the characters “poor danisina 
droop” and observing that they are the same forward and backward. One way to check 
for a palindrome is to reverse the characters in the string and then compare with them 
the original-in a palindrome, the sequence will be identical. Write C++ program with 
functions-
a) To print original string followed by reversed string using stack
b) To check whether given string is palindrome or not*/

#include <iostream>
#include <stack>
#include <cctype>  // For tolower() and isalnum()
#include <string>
using namespace std;

// Function to reverse the string using a stack
string reverseStringUsingStack(string str) {
    stack<char> s; // Create a stack to hold characters
    string reversed = "";

    // Push all characters of the string onto the stack
    for (char ch : str) {
        s.push(ch);
    }

    // Pop characters from the stack and append them to the reversed string
    while (!s.empty()) {
        reversed += s.top();
        s.pop();
    }

    return reversed; // Return the reversed string
}

// Function to check if a string is a palindrome
bool isPalindrome(string str) {
    string filtered = ""; // To hold only alphanumeric characters
    string reversed = ""; // To hold the reversed version of the filtered string

    // Filter the string: remove non-alphanumeric characters and convert to lowercase
    for (char ch : str) {
        if (isalnum(ch)) { // Check if character is alphanumeric
            filtered += tolower(ch); // Convert to lowercase and add to filtered string
        }
    }

    // Reverse the filtered string using the stack
    reversed = reverseStringUsingStack(filtered);

    // Compare the filtered string with its reversed version
    return filtered == reversed;
}

int main() {
    string input;

    // Input the string
    cout << "Enter a string: ";
    getline(cin, input);

    // Print the original and reversed strings
    cout << "\nOriginal String: " << input << endl;
    string reversed = reverseStringUsingStack(input);
    cout << "Reversed String: " << reversed << endl;

    // Check if the string is a palindrome
    if (isPalindrome(input)) {
        cout << "\nThe given string is a palindrome." << endl;
    } else {
        cout << "\nThe given string is not a palindrome." << endl;
    }

    return 0;
}
